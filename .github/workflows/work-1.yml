name: work-1
on:
  push:
    paths:
      - '.github/workflows/**'
      - 'src/**'
      - 'build.gradle'
      - 'Dockerfile'
    branches:
      - main
jobs:
  makeTagAndRelease:
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.create_tag.outputs.new_tag }}
    steps:
      - uses: actions/checkout@v4
      - name: Create Tag
        id: create_tag
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.TOKEN }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ steps.create_tag.outputs.new_tag }}
          release_name: Release ${{ steps.create_tag.outputs.new_tag }}
          body: ${{ steps.create_tag.outputs.changelog }}
          draft: false
          prerelease: false
  buildImageAndPush:
    permissions:
      contents: read
      packages: write
    name: dockerImageBuildAndPush
    needs: makeTagAndRelease
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Docker Buildx 설치
        uses: docker/setup-buildx-action@v2

      - name: ✨ JDK 17 설정
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Shutdown Ubuntu MySQL (SUDO)
        run: sudo service mysql stop # Shutdown the Default MySQL, "sudo" is necessary, please not remove it

      - name: Setup MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql root password: ${{ secrets.MYSQL_PASSWORD }} # Required if "mysql user" is empty, default is empty. The root superuser password

      - name: 레지스트리 로그인
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: set lower case owner name
        run: |
          echo "OWNER_LC=${OWNER,,}" >> ${GITHUB_ENV}
        env:
          OWNER: '${{ github.repository_owner }}'

      - name: application-secret.yml 생성
        env:
          ACTIONS_STEP_DEBUG: true
          APPLICATION_SECRET: ${{ secrets.APPLICATION_SECRET_YML }}
        run: echo "$APPLICATION_SECRET" > ./src/main/resources/application-secret.yml

      - name: 빌드 앤 푸시
        uses: docker/build-push-action@v3
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/${{ env.OWNER_LC }}/bitharmony-comma:${{ needs.makeTagAndRelease.outputs.tag_name }},
            ghcr.io/${{ env.OWNER_LC }}/bitharmony-comma:latest

  autoDeployUsingSSH:
    needs: buildImageAndPush
    runs-on: ubuntu-latest
    steps:
      - name: execute remote ssh
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.REMOTE_SSH_HOST }}
          username: ${{ secrets.REMOTE_SSH_USERNAME }}
          key: ${{ secrets.REMOTE_SSH_KEY }}
          passphrase: ${{ secrets.REMOTE_SSH_PASSPHRASE }}
          password: ${{ secrets.REMOTE_SSH_PASSWORD }}
          port: ${{ secrets.REMOTE_SSH_PORT }}
          debug: true
          script:
            whoami;
            docker rm -f deploy_1;
            docker pull ghcr.io/${{ env.OWNER_LC }}/bitharmony-comma:${{ needs.makeTagAndRelease.outputs.tag_name }};
            docker run --name deploy_1  -d -p 8080:8090 -e TZ=Asia/Seoul ghcr.io/techit-bitharmony/bitharmony-comma:latest;